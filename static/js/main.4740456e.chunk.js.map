{"version":3,"sources":["store-provider.js","components/Project.js","components/AddProjectForm.js","components/ProjectContainer.js","components/Todo.js","components/AddTodoForm.js","components/EditTodoForm.js","components/TodoContainer.js","components/Wrapper.js","App.js","index.js"],"names":["today","JSON","parse","stringify","Date","defaultTodos","project","todos","item","dueDate","complete","priority","storedState","window","localStorage","getItem","defaultState","reducer","updatedTodos","updatedProjects","updatedCurrent","newState","state","action","type","projects","concat","nextProject","setItem","index","findIndex","currentProject","Math","abs","filter","proj","clickedProject","map","todo","newTodo","editTodo","console","log","StoreContext","createContext","StoreProvider","children","useReducer","value","dispatch","Provider","useStore","useContext","Project","className","id","onClick","event","target","AddProjectForm","showProjectForm","toggleProjectForm","useState","newProject","setNewProject","onSubmit","preventDefault","style","width","onChange","ProjectContainer","setShowProjectForm","ind","key","Todo","showEditForm","toggleEditForm","parseInt","match","format","parseISO","checked","AddTodoForm","showTodoForm","toggleTodoForm","newItem","setNewItem","newDueDate","setNewDueDate","newPriority","setNewPriority","EditTodoForm","itemEdit","setItemEdit","dueDateEdit","setDueDateEdit","priorityEdit","setPriorityEdit","useEffect","TodoContainer","showProject","setShowProject","setPriority","setShowEditForm","setShowTodoForm","defaultValue","disabled","Wrapper","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4740456e.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext } from 'react';\n\n// default project/todos\nconst today = JSON.parse(JSON.stringify(new Date()));\nlet defaultTodos = [\n  {\n    project: \"My Project\",\n    todos: [\n      {\n        item: \"write more todos\",\n        dueDate: today,\n        complete: false,\n        priority: \"high\"\n      },\n      {\n        item: \"another todo\",\n        dueDate: today,\n        complete: false,\n        priority: \"med\"\n      }\n    ]\n  },\n  {\n    project: \"Another ToDo list\",\n    todos: []\n  }\n]\n\n// grab projects in localStorage or set default \nlet storedState = window.localStorage.getItem(\"projects\");\nlet defaultState = JSON.parse(storedState);\nconsole.log(defaultState)\nif (!storedState) {\n  defaultState = {\n    projects: defaultTodos,\n    currentProject: defaultTodos[0],\n  }\n\n  window.localStorage.setItem(\"projects\", JSON.stringify(defaultState));\n}\nconsole.log(defaultState)\n\n// state reducer - ideally would split up further and combinereducers\nfunction reducer (state = defaultState, action = {}) {\n  let updatedTodos, updatedProjects, updatedCurrent, newState;\n  \n  switch(action.type) {\n    case 'ADD_PROJECT': \n      updatedProjects = state.projects.concat(action.nextProject);\n      newState = {\n        ...state,\n        projects: updatedProjects\n      };\n      window.localStorage.setItem(\"projects\", JSON.stringify(newState));\n      return newState;\n    case 'DEL_PROJECT':\n      let index = state.projects.findIndex((project) => project === state.currentProject);\n     \n      // move currentProject marker if it's deleted\n      updatedCurrent=state.projects[Math.abs(index-1)];\n      newState = {\n        projects: state.projects.filter((proj, index) => index !== action.index), currentProject: updatedCurrent\n      };\n      window.localStorage.setItem(\"projects\", JSON.stringify(newState));\n      return newState;\n    case 'UPDATE_CURRENT':\n      updatedCurrent = state.projects.filter(proj => proj.project === action.clickedProject);\n\n      newState = {\n        ...state,\n        currentProject: updatedCurrent[0]\n      };\n      window.localStorage.setItem(\"projects\", JSON.stringify(newState));\n      return newState;\n    case 'UPDATE_COMPLETE':\n      updatedTodos = state.currentProject.todos.map((todo, index) => (index === action.index) ? { ...todo, complete: !todo.complete } : todo);\n      updatedCurrent = state.currentProject;\n      updatedCurrent.todos = updatedTodos;\n      updatedProjects = state.projects.map(proj => (proj.project === state.currentProject.project) ? updatedCurrent : proj);\n\n      newState={\n        projects: updatedProjects,\n        currentProject: updatedCurrent \n      };\n      window.localStorage.setItem(\"projects\", JSON.stringify(newState));\n      return newState;\n    case 'ADD_TODO':\n      updatedTodos = state.currentProject.todos.concat(action.newTodo);\n      updatedCurrent = {...state.currentProject, todos: updatedTodos }\n      updatedProjects = state.projects.map((proj) => \n        (proj.project === state.currentProject.project) ? updatedCurrent : proj);\n      \n      newState={\n        projects: updatedProjects,\n        currentProject: updatedCurrent \n      };\n      window.localStorage.setItem(\"projects\", JSON.stringify(newState));\n      return newState;\n    case 'DEL_TODO': \n      updatedTodos = state.currentProject.todos.filter((todo, index) => index !== action.index);\n      updatedCurrent = {...state.currentProject, todos: updatedTodos }\n      updatedProjects = state.projects.map((proj) => \n        (proj.project === state.currentProject.project) ? updatedCurrent : proj);\n      \n      newState={\n        projects: updatedProjects,\n        currentProject: updatedCurrent\n      };\n      window.localStorage.setItem(\"projects\", JSON.stringify(newState));\n      return newState;\n    case 'EDIT_TODO':\n      updatedTodos = state.currentProject.todos.map((todo, index) => (index === action.index) ? action.editTodo : todo);\n      updatedCurrent = state.currentProject\n      updatedCurrent.todos = updatedTodos;\n      updatedProjects = state.projects.map(proj => (proj.project === state.currentProject.project) ? updatedCurrent : proj)\n      \n      newState={\n        projects: updatedProjects,\n        currentProject: updatedCurrent\n      };\n      window.localStorage.setItem(\"projects\", JSON.stringify(newState));\n      return newState;\n    default:\n      return state;\n  }\n}\n\nconst StoreContext = createContext(null);\n\nexport function StoreProvider({ children }) {\n  const [ state, dispatch ] = useReducer(reducer, defaultState);\n  const value = { state, dispatch }\n\n  return (\n    <StoreContext.Provider value={value}>\n      {children}\n    </StoreContext.Provider>\n  )\n}\n\nexport const useStore = () => useContext(StoreContext);","import React from 'react';\nimport { useStore } from '../store-provider';\n\nconst Project = ({ project, index }) => {\n\n  const { dispatch, state } = useStore();\n\n  const makeCurrentProj = (event) => {\n    let clickedProject = event.target.id;\n    dispatch ({ type: 'UPDATE_CURRENT', clickedProject });\n  }\n\n  return (\n    <span className=\"form-header\">\n      <div \n        id={project.project} \n        className={(project.project === state.currentProject.project) ? \"project-link active-project\" : \"project-link\"} \n        onClick={makeCurrentProj}\n      >\n        {project.project}\n      </div>\n      <div \n        className=\"x-btn\" \n        onClick={() => dispatch({ type: 'DEL_PROJECT', index })}\n      >\n        {'\\u2612'}\n      </div>\n    </span>\n  )\n}\n\nexport default Project;","import React, { useState } from 'react';\nimport { useStore } from '../store-provider';\n\nconst AddProjectForm = ({ showProjectForm, toggleProjectForm }) => {\n  const { dispatch } = useStore();\n  const [ newProject, setNewProject ] = useState(\"\");\n\n  const submitForm = (event) => {\n    event.preventDefault();\n\n    let nextProject = {\n      project: newProject,\n      todos: []\n    }\n\n    setNewProject(\"\");\n    toggleProjectForm();\n    dispatch({ type: 'ADD_PROJECT', nextProject })\n  }\n\n  return (\n    <div>\n      <form \n        id=\"newProjectForm\" \n        className={showProjectForm ? \"form-header\" : \"hidden form-header\"} \n        onSubmit={submitForm}\n      >\n        <span>\n          <input \n            id=\"newProject\" \n            style={{ width:\"9em\" }}\n            value={newProject}\n            onChange={({ target }) => setNewProject(target.value)}\n          />\n          <button \n            type=\"submit\"\n            className=\"save-btn\" \n          >\n            save\n          </button>\n        </span>\n        <div \n          className=\"x-btn\" \n          onClick={() => {\n            setNewProject(\"\");\n            toggleProjectForm()\n          }}\n        >\n          {'\\u2612'}\n        </div>\n      </form>\n    </div>\n  )\n\n}\n\nexport default AddProjectForm;\n","import React, { useState } from 'react';\nimport Project from './Project';\nimport AddProjectForm from './AddProjectForm';\n\nconst ProjectContainer = ({ projects }) => {\n\n  const [ showProjectForm, setShowProjectForm ] = useState(false);\n\n  const toggleProjectForm = () => {\n    setShowProjectForm(!showProjectForm);\n  }\n \n  return (\n    <div id=\"project-container\">\n      <div className=\"project-header\">Projects</div> \n      <div id=\"project-list\">\n        { projects \n          ? projects.map((project, ind) => \n            <Project \n              key = {ind} \n              project = {project} \n              index =  {ind}\n            />\n            )\n          : \"\"}\n        <AddProjectForm showProjectForm={showProjectForm} toggleProjectForm={toggleProjectForm}/>\n      </div>\n      <button \n        className={showProjectForm ? \"addFormBtn hidden\" : \"addFormBtn\"}\n        onClick={toggleProjectForm}\n      >\n        Add New Project\n      </button>\n    </div>\n  );\n}\n\nexport default ProjectContainer;","import React from 'react';\nimport { useStore } from '../store-provider';\nimport { format, parseISO } from 'date-fns';\n\nconst Todo = ({ todo, index, showEditForm, toggleEditForm }) => {\n  const { dispatch } = useStore();\n\n  return (\n    <div \n      id={\"todo-item\"+index}\n      className={parseInt(showEditForm.match(/\\d+/)) === index ? \"todo-item hidden\" : \"todo-item\"} \n    >\n      <div className={todo.complete ? \"complete\" : \"\"}>\n        {todo.item}\n      </div>\n      <div className={todo.complete ? \"complete\" : \"\"}>\n        {format(parseISO(todo.dueDate), \"MM/dd/yyyy\")}\n      </div>\n      <div className={todo.complete ? \"complete\" : \"\"}>\n        {todo.priority}\n      </div>\n      <input \n        type=\"checkbox\" \n        id={\"check\"+index} \n        checked={todo.complete} \n        onChange={() => dispatch({type: 'UPDATE_COMPLETE', index})}\n      />\n      <div \n        id={\"edit\"+index} \n        className=\"edit-btn\" \n        onClick={toggleEditForm}\n      >\n        {'\\u270D'}\n      </div>\n      <div \n        className=\"x-btn\" \n        onClick={() => dispatch({ type: 'DEL_TODO', index })}\n      >\n        {'\\u2612'}\n      </div>\n    </div>\n  )\n};\n\nexport default Todo;","import React, { useState } from 'react';\nimport { format, parseISO } from 'date-fns';\nimport { useStore } from '../store-provider';\n\nconst AddTodoForm = ({ showTodoForm, toggleTodoForm }) => {\n  const { dispatch } = useStore();\n  const [ newItem, setNewItem ] = useState(\"\");\n  const [ newDueDate, setNewDueDate ] = useState(format(new Date(), \"yyyy-MM-dd\")); \n  const [ newPriority, setNewPriority ] = useState(\"none\");\n\n  const submitTodoForm = (event) => {\n    event.preventDefault();\n    \n    let newTodo = {\n      item: newItem,\n      dueDate: newDueDate,\n      complete: false,\n      priority: newPriority\n    }\n\n    setNewItem(\"\");\n    setNewDueDate(format(new Date(), \"yyyy-MM-dd\"))\n    setNewPriority(\"none\");\n    \n    toggleTodoForm();\n    dispatch({ type: 'ADD_TODO', newTodo });\n  }\n\n  return (\n    <div>\n      <form className={showTodoForm ? \"new-todo-item\" : \"hidden new-todo-item\"} id=\"newTodoForm\" onSubmit={submitTodoForm}>\n        <input \n          type=\"text\"\n          id=\"newItem\"\n          value={newItem}\n          onChange={({target}) => setNewItem(target.value)}\n        />\n        <input \n          type=\"date\" \n          id=\"newDueDate\"\n          value={newDueDate}\n          onChange={({target}) => setNewDueDate(format(parseISO(target.value), \"yyyy-MM-dd\"))}\n        />\n        <select \n          id=\"newPriority\"\n          value={newPriority}\n          onChange={({target}) => setNewPriority(target.value)}\n        >\n          <option value=\"none\">none</option>\n          <option value=\"high\">high</option>\n          <option value=\"med\">med</option>\n          <option value=\"low\">low</option>\n        </select>\n        <button \n          type=\"submit\"\n          className=\"save-btn\" \n        >\n          save\n        </button>\n        <div \n          className=\"x-btn\" \n          onClick={toggleTodoForm}\n        >\n          {'\\u2612'}\n        </div>\n      </form>\n    </div>\n  )\n\n}\n\nexport default AddTodoForm;","import React, { useState, useEffect } from 'react';\nimport { useStore } from '../store-provider';\nimport { format, parseISO } from 'date-fns';\n\nconst EditTodoForm = ({ index, todo, showEditForm, toggleEditForm }) => {\n  const { dispatch } = useStore();\n  const [ itemEdit, setItemEdit ] = useState(todo.item);\n  const [ dueDateEdit, setDueDateEdit ] = useState(format(parseISO(todo.dueDate), \"yyyy-MM-dd\"));\n  const [ priorityEdit, setPriorityEdit ] = useState(todo.priority);\n\n  // refresh form values when project/todos change\n  useEffect(()=> {\n    setItemEdit(todo.item);\n    setDueDateEdit(format(parseISO(todo.dueDate), \"yyyy-MM-dd\"));\n    setPriorityEdit(todo.priority);\n  }, [todo])\n\n  const submitEdit = (event) => {\n    event.preventDefault();\n    let index = parseInt(event.target.id.match(/\\d+/));\n    let editTodo = {\n      item: itemEdit,\n      dueDate: dueDateEdit,\n      complete: todo.complete,\n      priority: priorityEdit\n    };\n\n    toggleEditForm(event);\n    dispatch({ type: 'EDIT_TODO', editTodo, index });\n  }\n\n  return (\n    <form \n      id={\"editForm\"+index} onSubmit={submitEdit}\n      className={showEditForm === \"editForm\"+index ? \"new-todo-item\" : \"new-todo-item hidden\"} \n    >\n      <input \n        type=\"text\"\n        id={\"itemEdit\"+index}\n        value={itemEdit}\n        onChange={({target}) => setItemEdit(target.value)}\n      />\n      <input \n        type=\"date\"\n        id={\"dueDateEdit\"+index}\n        value={dueDateEdit}\n        onChange={({target}) => setDueDateEdit(format(parseISO(target.value), \"yyyy-MM-dd\"))}\n      />\n      <select \n        id={\"priorityEdit\"+index} \n        value={priorityEdit}\n        onChange={({target}) => setPriorityEdit(target.value)}\n      >\n        <option value=\"none\">none</option>\n        <option value=\"high\">high</option>\n        <option value=\"med\">med</option>\n        <option value=\"low\">low</option>\n      </select>\n      <button \n        type=\"submit\"\n        className=\"save-btn\" \n      >\n        save\n      </button>\n      <div \n        className=\"x-btn\" \n        onClick={toggleEditForm}\n      >\n        {'\\u2612'}\n      </div>\n    </form>\n  )\n}\n\nexport default EditTodoForm;","import React, { useState, useEffect } from 'react';\nimport Todo from './Todo';\nimport AddTodoForm from './AddTodoForm';\nimport EditTodoForm from './EditTodoForm';\n\nconst TodoContainer = ({ project }) => {\n  \n  const [ showProject, setShowProject ] = useState(project.todos);\n  const [ priority, setPriority ] = useState(\"all\");\n  const [ showEditForm, setShowEditForm ] = useState(\"\");\n  const [ showTodoForm, setShowTodoForm ] = useState(false);\n\n  useEffect(() => {\n    if (priority !== \"all\" && priority !== \"priority\") {\n      setShowProject(project.todos.filter((todo) => todo.priority === priority));\n    } else {\n      setShowProject(project.todos);\n    }\n  }, [priority, project.todos])\n\n  const toggleTodoForm = () => {\n    setShowTodoForm(!showTodoForm);\n  }\n\n  const toggleEditForm = (event) => {\n    let index = parseInt(event.target.id.match(/\\d+/));\n    if (showEditForm) {\n      setShowEditForm(\"\");\n    } else {\n      setShowEditForm(\"editForm\"+index);\n    }\n  }\n\n  const changePriority = (event) => {\n    setPriority(event.target.value);\n    if (priority !== \"all\" && priority !== \"priority\") {\n      setShowProject(project.todos.filter((todo) => todo.priority === priority));\n    } else {\n      setShowProject(project.todos)\n    }\n  }\n\n  return (\n    <div id=\"todo-container\"> \n      <div id=\"centering\">\n        <div className=\"todo-header\">\n          <div>Item</div>\n          <div>Due Date</div>\n          <div>\n            <select defaultValue=\"priority\" id=\"prioritySelect\" onChange={changePriority}>\n              <option value=\"priority\" disabled=\"disabled\">priority</option>\n              <option value=\"all\">all</option>\n              <option value=\"high\">high</option>\n              <option value=\"med\">med</option>\n              <option value=\"low\">low</option>\n              <option value=\"none\">none</option>\n            </select>\n          </div>\n          <div></div>\n          <div className=\"edit-btn\"></div>\n          <div className=\"x-btn\"></div>\n        </div>\n        <div id=\"todos\">\n          { showProject \n            ? showProject.map((todo, index) =>  \n              <div key={index}>\n                <Todo todo={todo} index={index} showEditForm={showEditForm} toggleEditForm={toggleEditForm}/>\n                <EditTodoForm todo={todo} index={index} showEditForm={showEditForm} toggleEditForm={toggleEditForm}/>\n              </div>\n            )\n            : \"\"\n          }\n        <AddTodoForm showTodoForm={showTodoForm} toggleTodoForm={toggleTodoForm}/>\n        </div>\n        <button \n          className={showTodoForm ? \"addFormBtn hidden\" : \"addFormBtn\"}\n          onClick={toggleTodoForm}\n        >\n          Add New Todo\n        </button>\n      </div>\n    </div>\n  )\n\n}\n\nexport default TodoContainer;","import React from 'react';\nimport { useStore } from '../store-provider';\nimport ProjectContainer from './ProjectContainer';\nimport TodoContainer from './TodoContainer';\n\nconst Wrapper = () => {\n  const { state } = useStore();\n\n  return (\n    <div id=\"app-container\">\n      <h1>To Do App</h1>\n      <div id=\"container\">\n        <ProjectContainer projects={state.projects}/>\n        <TodoContainer project={state.currentProject}/>\n      </div>\n    </div>\n  )\n}\n\nexport default Wrapper;","import React from 'react';\nimport { StoreProvider } from './store-provider';\nimport Wrapper from './components/Wrapper';\nimport './app.css';\n\nfunction App() {\n\n  return (\n    <StoreProvider>\n      <Wrapper/>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}